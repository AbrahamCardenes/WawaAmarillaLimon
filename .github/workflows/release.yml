name: Release to github

on:
  pull_request:
    branches: [master]

jobs:
#  test:
#    name: Unit Tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#          cache: 'gradle'
#
#      - name: Grant execute permissions for gradlew
#        run: chmod +x gradlew
#
#      - name: Run unit tests
#        run: ./gradlew clean testDebug

  release:
    name: Build & Release APK
    runs-on: ubuntu-latest
    # needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Clean Build
        run: ./gradlew clean

      - name: Decode Keystore File
        run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > wawa-amarilla-key.jks

      - name: List files to check keystore location  # Debug step
        run: ls -al app

      - name: list files
        run: ls -l /home/runner/work/WawaAmarillaLimon/WawaAmarillaLimon/app/

      - name: list files
        run: ls -l /home/runner/work/WawaAmarillaLimon/WawaAmarillaLimon/

      - name: Set up signing environment variables
        run: |
          echo "KEY_PASS=${{ secrets.KEY_PASS }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV

      - name: Sign apk
        run: |
          export SIGNING_STORE_FILE=wawa-amarilla-key.jks
          export SIGNING_STORE_PASSWORD=${{ secrets.KEY_PASS }}
          export SIGNING_KEY_ALIAS=${{ secrets.KEY_ALIAS }}
          export SIGNING_KEY_PASSWORD=${{ secrets.KEY_PASS }}
          ./gradlew assembleRelease

      #- name: Build Release APK
      #  run: ./gradlew assembleRelease
      # app/build/outputs/apk/release/app-release-unsigned.apk <--- path to no unsigned apk's

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/app-release.apk
          tag_name: v1.0.${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.PIPELINE_BUILDER }}
