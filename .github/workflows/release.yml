name: Build and Release Signed APK to github

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.gradle-cache.outputs.cache-key }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

  ktlint:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4

      - name: Ktint set up curl
        run: curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.50.0/ktlint && chmod a+x ktlint && sudo mv ktlint /usr/local/bin/

      - run: ktlint '!**/build/**'

  build:
    runs-on: ubuntu-latest
    needs: ktlint

    steps:
      - uses: actions/checkout@v4

      - name: Set google-service.json file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 --decode > app/google-services.json


      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Executing Clean, Check and Unit Tests.
        run: ./gradlew clean testRelease


  release-apk:
    name: Build & Release APK
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set google-service.json file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 --decode > app/google-services.json


      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Clean Build
        run: ./gradlew clean

      - name: Decode Keystore File
        env:
          KEY_STORE: ${{ secrets.KEY_STORE }}
        run: echo "$KEY_STORE" | base64 --decode > app/wawa-amarilla-key.jks

      #- name: List files from app
      # run: ls -l /home/runner/work/WawaAmarillaLimon/WawaAmarillaLimon/app/

      - name: Set up signing environment variables
        env:
          KEY_PASS: ${{ secrets.KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          API_WAWAS: ${{ secrets.API_WAWAS }}
          API_TRAVELLERS: ${{ secrets.API_TRAVELLERS }}
          API_STATICAPP: ${{ secrets.API_STATICAPP }}
        run: |
          echo "KEY_PASS=$KEY_PASS" >> $GITHUB_ENV
          echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
          echo "API_WAWAS=$API_WAWAS" >> $GITHUB_ENV
          echo "API_TRAVELLERS=$API_TRAVELLERS" >> $GITHUB_ENV
          echo "API_STATICAPP=$API_STATICAPP" >> $GITHUB_ENV

      - name: Sign release APK build
        env:
          KEY_PASS: ${{ secrets.KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          export SIGNING_STORE_FILE=/home/runner/work/WawaAmarillaLimon/WawaAmarillaLimon/app/wawa-amarilla-key.jks
          export SIGNING_STORE_PASSWORD=$KEY_PASS
          export SIGNING_KEY_ALIAS=$KEY_ALIAS
          export SIGNING_KEY_PASSWORD=$KEY_PASS
          ./gradlew assembleRelease      

      #- name: Build Release APK
      #  run: ./gradlew assembleRelease
      # app/build/outputs/apk/release/app-release-unsigned.apk <--- path to no unsigned apk's

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk

  release-aab:
    name: Build & Release AAB
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set google-service.json file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 --decode > app/google-services.json


      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Clean Build
        run: ./gradlew clean

      - name: Decode Keystore File
        env:
          KEY_STORE: ${{ secrets.KEY_STORE }}
        run: echo $KEY_STORE | base64 --decode > app/wawa-amarilla-key.jks

      - name: Set up signing environment variables
        env:
          KEY_PASS: ${{ secrets.KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          API_WAWAS: ${{ secrets.API_WAWAS }}
          API_TRAVELLERS: ${{ secrets.API_TRAVELLERS }}
          API_STATICAPP: ${{ secrets.API_STATICAPP }}
        run: |
          echo "KEY_PASS=$KEY_PASS >> $GITHUB_ENV
          echo "KEY_ALIAS=$KEY_ALIAS >> $GITHUB_ENV
          echo "API_WAWAS=$API_WAWAS >> $GITHUB_ENV
          echo "API_TRAVELLERS=$API_TRAVELLERS >> $GITHUB_ENV
          echo "API_STATICAPP=$API_STATICAPP >> $GITHUB_ENV

      - name: Sign release App bundle
        env:
          KEY_PASS: ${{ secrets.KEY_PASS }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          export SIGNING_STORE_FILE=/home/runner/work/WawaAmarillaLimon/WawaAmarillaLimon/app/wawa-amarilla-key.jks
          export SIGNING_STORE_PASSWORD=$KEY_PASS
          export SIGNING_KEY_ALIAS=$KEY_ALIAS
          export SIGNING_KEY_PASSWORD=$KEY_PASS
          ./gradlew bundleRelease

      - name: Upload AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: app/build/outputs/bundle/release/app-release.aab

  upload-files:
    name: Upload APK and APP
    runs-on: ubuntu-latest
    needs:
      - release-apk
      - release-aab

    steps:
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk

      - name: Download App Bundle
        uses: actions/download-artifact@v4
        with:
          name: release-aab


      - name: Create Github Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090
        with:
          files: |
            app-release.apk
            app-release.aab
          tag_name: v1.0.${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.PIPELINE_BUILDER }}